version: "3.7"
services:
  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    networks:
      - app-network
    command: npm run start:dev orders
    env_file:
      - ./apps/orders/.env
    depends_on:
      - postgres
      - billing
      - auth
      - rabbitmq
      - elasticsearch
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
    container_name: orders
  billing:
    build:
      context: .
      dockerfile: ./apps/billing/Dockerfile
      target: development
    networks:
      - app-network
    command: npm run start:dev billing
    env_file:
      - ./apps/billing/.env
    depends_on:
      - postgres
      - rabbitmq
      - auth
      - elasticsearch
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    container_name: billing
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    networks:
      - app-network
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    depends_on:
      - postgres
      - rabbitmq
      - elasticsearch
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '4001:4001'
    container_name: auth
  postgres:
    image: postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=auth,orders
    networks:
      - app-network
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql/data
    container_name: postgres
    env_file:
      - ./.env
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
    networks:
      - app-network
    container_name: rabbitmq
  elasticsearch:
    image: elasticsearch:8.5.2
    container_name: elasticsearch
    environment:
      - node.name=${ELASTICSEARCH_NODE_NAME}
      - cluster.name=${ELASTICSEARCH_CLUSTER_NAME}
      - discovery.type=${ELASTICSEARCH_DISCOVERY_TYPE}
      - xpack.security.enabled=false
    ports:
      - '9200:9200'
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - app-network
volumes:
  postgres:
    driver: local
  esdata:
    driver: local
networks:
  app-network:
    driver: bridge