services:
#  orders:
#    build:
#      context: .
#      dockerfile: ./apps/orders/Dockerfile
#      target: development
#    command: npm run start:dev orders
#    env_file:
#      - ./apps/orders/.env
#    depends_on:
#      - postgres
#      - rabbitmq
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
#    ports:
#      - '3000:3000'
#  billing:
#    build:
#      context: .
#      dockerfile: ./apps/billing/Dockerfile
#      target: development
#    command: npm run start:dev billing
#    env_file:
#      - ./apps/billing/.env
#    depends_on:
#      - postgres
#      - rabbitmq
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
  postgres:
    image: postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
volumes:
  postgres:
    driver: local